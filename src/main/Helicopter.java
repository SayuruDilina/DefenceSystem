/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

/**
 *
 * @author HP
 */
public class Helicopter extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form Helicopter
     
     */
       private  MainController mainController;
    
    /*  public Helicopter(Object object) {
        setVisible(true);
    }*/
     
//      public Helicopter(MainController maincontroller) {
//        
//    }
       int spinnerValue; 
       int Ammo;
       int Value;
    public Helicopter(MainController mainController) {
        this.mainController = mainController;
        initComponents();
    }
  public Helicopter(){
  }
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAreaclearHelicopter = new javax.swing.JLabel();
        btnShoot = new javax.swing.JButton();
        btnMissile = new javax.swing.JButton();
        btnLaser = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtHelicopterMain = new javax.swing.JTextArea();
        jCheckBox1 = new javax.swing.JCheckBox();
        txtHelicopter = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        sldFuel = new javax.swing.JSlider();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Helicopter");
        setBackground(new java.awt.Color(0, 92, 11));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAreaclearHelicopter.setForeground(new java.awt.Color(255, 255, 255));
        lblAreaclearHelicopter.setText("Area not cleared");
        getContentPane().add(lblAreaclearHelicopter, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 6, 113, 28));

        btnShoot.setBackground(new java.awt.Color(255, 255, 0));
        btnShoot.setText("Shoot");
        btnShoot.setEnabled(false);
        btnShoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShootActionPerformed(evt);
            }
        });
        getContentPane().add(btnShoot, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 38, 122, 32));

        btnMissile.setBackground(new java.awt.Color(255, 255, 51));
        btnMissile.setText("Missile Operation");
        btnMissile.setEnabled(false);
        btnMissile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMissileActionPerformed(evt);
            }
        });
        getContentPane().add(btnMissile, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 38, -1, 32));

        btnLaser.setBackground(new java.awt.Color(255, 255, 0));
        btnLaser.setText("Laser Operation");
        btnLaser.setEnabled(false);
        getContentPane().add(btnLaser, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 88, 130, 32));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Soldier  Count");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 15, -1, -1));

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(10, null, null, 1));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });
        getContentPane().add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 12, -1, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ammo Count");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 38, -1, -1));

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(10, null, null, 1));
        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });
        getContentPane().add(jSpinner2, new org.netbeans.lib.awtextra.AbsoluteConstraints(387, 43, -1, -1));

        txtHelicopterMain.setColumns(20);
        txtHelicopterMain.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtHelicopterMain.setRows(5);
        jScrollPane1.setViewportView(txtHelicopterMain);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 147, 434, 95));

        jCheckBox1.setBackground(new java.awt.Color(0, 92, 11));
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Position");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(303, 94, -1, -1));

        txtHelicopter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHelicopterActionPerformed(evt);
            }
        });
        getContentPane().add(txtHelicopter, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 260, 434, -1));

        btnSend.setBackground(new java.awt.Color(255, 255, 0));
        btnSend.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        getContentPane().add(btnSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(462, 260, 66, -1));

        sldFuel.setBackground(new java.awt.Color(0, 92, 11));
        sldFuel.setForeground(new java.awt.Color(255, 255, 255));
        sldFuel.setMajorTickSpacing(10);
        sldFuel.setOrientation(javax.swing.JSlider.VERTICAL);
        sldFuel.setPaintLabels(true);
        sldFuel.setPaintTicks(true);
        sldFuel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldFuelStateChanged(evt);
            }
        });
        getContentPane().add(sldFuel, new org.netbeans.lib.awtextra.AbsoluteConstraints(536, 6, -1, 289));

        jPanel1.setBackground(new java.awt.Color(0, 92, 11));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 580, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShootActionPerformed
        // TODO add your handling code here:
        int ammoCount=(int)jSpinner2.getValue();
        if(ammoCount>0){
            ammoCount--;
            jSpinner2.setValue(ammoCount);
                } 
        if(ammoCount==0){
            mainController.Warning("Helicopter:Ammo Count is 0 \n Please  Help me!!!!");
        
        }
    }//GEN-LAST:event_btnShootActionPerformed

    private void txtHelicopterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHelicopterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHelicopterActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void btnMissileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMissileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMissileActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
          String privateMessage = txtHelicopter.getText();
             mainController.SendPriavteMessage("Helicopter:"+privateMessage);
//        HelicopterTextArea.getText();
//          
//           String privateMessage = null;
//        maincontroller.SendPriavteMessage(  privateMessage);
    }//GEN-LAST:event_btnSendActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        // TODO add your handling code here:
           spinnerValue = (int) jSpinner1.getValue();
           /* mainController.Details(spinnerValue);
            System.out.println(spinnerValue);   
           */
            if (spinnerValue==0){
        mainController.DieWarning("Helicopter:Our All Soldiers Died Sorry Boss... ");
        
        }
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
        // TODO add your handling code here:
         Ammo = (int) jSpinner2.getValue();
           
            System.out.println(Ammo);
    }//GEN-LAST:event_jSpinner2StateChanged

    private void sldFuelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldFuelStateChanged
        // TODO add your handling code here:
       Value=(int)sldFuel.getValue();
    }//GEN-LAST:event_sldFuelStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Helicopter().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLaser;
    private javax.swing.JButton btnMissile;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnShoot;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JLabel lblAreaclearHelicopter;
    private javax.swing.JSlider sldFuel;
    private javax.swing.JTextField txtHelicopter;
    private javax.swing.JTextArea txtHelicopterMain;
    // End of variables declaration//GEN-END:variables

    public int[] getDetails(){
        
        int[] ar = {(int) jSpinner1.getValue(),(int)jSpinner2.getValue(), sldFuel.getValue()};
        return ar;
       
} 
    @Override
     public void SendMessagePrivatelyFromMain(String MainSelected, boolean MainStatus, String privateMessage){
       if ( MainStatus == true && MainSelected=="Helicopter"  ) {
            txtHelicopterMain.append("\n Private Message:"+privateMessage);
          
        } else if(MainStatus==false){
        txtHelicopterMain.append(privateMessage+"\n"); 
           System.out.println("hi");
       } 
     
     
     }  
      @Override
    public void updateArea(boolean status){
		  if (status == true) {
              lblAreaclearHelicopter.setText("Area  Cleared");
          
        } else if (status == false) {
             lblAreaclearHelicopter.setText("Area Not Cleared");
        }
	}
    
     
  /*  public void SendMainmessge(String message){
           HelicopterMainTextArea.setText(message); 
           System.out.println("hi");
    
    }*/
       @Override
 public void btnEnable(int Value){
     boolean select = jCheckBox1.isSelected();
     if (select== true) {
         if(Value>25){
          btnShoot.setEnabled(true);
     }else{
          btnShoot.setEnabled(false);
     }
      if(Value>50){
          btnMissile.setEnabled(true);
     }else{
          btnMissile.setEnabled(false);
     }   
       if(Value>75){
          btnLaser.setEnabled(true);
     }else{
         btnLaser.setEnabled(false);
     }      
         
         
         
     }
     
 
 }

  
            
}
